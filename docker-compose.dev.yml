version: '3.8'

services:
  # MariaDB Database
  db:
    image: mariadb:10.6
    container_name: church_attendance_db_dev
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: church_attendance
      MYSQL_USER: church_user
      MYSQL_PASSWORD: church_password
    ports:
      - "3307:3306"
    volumes:
      - db_data_dev:/var/lib/mysql
      - ./server/scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - app-network-dev
    healthcheck:
      test: ["CMD", "mariadb", "-u", "church_user", "-pchurch_password", "-e", "SELECT 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Node.js Backend Server (Development)
  server:
    build:
      context: .
      dockerfile: Dockerfile.server.dev
    container_name: church_attendance_server_dev
    restart: unless-stopped
    env_file:
      - ./server/.env
    environment:
      NODE_ENV: development
      AUTH_DEV_BYPASS: 'false'
      PORT: 3001
      CLIENT_URL: http://localhost:3000
      DB_HOST: db
      DB_PORT: 3306
      DB_NAME: church_attendance
      DB_USER: church_user
      DB_PASSWORD: church_password
      JWT_SECRET: your_secure_jwt_secret_change_this_in_production
      JWT_EXPIRE: 30d
      OTC_EXPIRE_MINUTES: 10
      OTC_RESEND_COOLDOWN_SECONDS: 60
      EMAIL_FROM: hello@letmypeoplegrow.com.au
      # Logging controls (quieter dev defaults)
      LOG_LEVEL: debug
      CONSOLE_LOG_LEVEL: debug
      HTTP_LOG_MIN_STATUS: 200
      HTTP_LOG_SLOW_MS: 500
      LOG_HTTP_START: 'true'
      # External services should be configured in server/.env file
      # TWILIO_ACCOUNT_SID, TWILIO_AUTH_TOKEN, TWILIO_FROM_NUMBER
      # BREVO_API_KEY
    volumes:
      - ./server:/app
      - /app/node_modules
      - ./server/uploads:/app/uploads
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network-dev
    command: npm run dev

  # React Frontend Client (Development)
  client:
    build:
      context: .
      dockerfile: Dockerfile.client.dev
    container_name: church_attendance_client_dev
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - ./client:/app
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      - PORT=3000
      - FAST_REFRESH=false
      - WDS_SOCKET_HOST=localhost
      - WDS_SOCKET_PORT=0
      - WDS_SOCKET_PATH=
      - WDS_SOCKET_PROTOCOL=
    depends_on:
      - server
    networks:
      - app-network-dev
    command: npm start

  # Nginx for API routing (Development)
  nginx:
    build:
      context: .
      dockerfile: Dockerfile.nginx.dev
    container_name: church_attendance_nginx_dev
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx-dev.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - client
      - server
    networks:
      - app-network-dev

  # phpMyAdmin (Development)
  phpmyadmin:
    image: phpmyadmin:latest
    container_name: church_attendance_phpmyadmin_dev
    restart: unless-stopped
    environment:
      PMA_HOST: db
      PMA_PORT: 3306
      PMA_USER: church_user
      PMA_PASSWORD: church_password
      UPLOAD_LIMIT: 256M
    ports:
      - "8080:80"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network-dev

volumes:
  db_data_dev:

networks:
  app-network-dev:
    driver: bridge 